#include "canny.h"

/*
* Comments : 邻域追踪
* Param ptr : 原图像的灰度值
* Param gra : 原图像的梯度值
* Param height : 原图像的高度
* Param width : 原图像的宽度
*/
void Trace_edge(uint8** ptr, float** gra, uint16 height, uint16 width)
{
	uint16 i, j;
	for (i = 1; i < height - 1; i++)
	{
		for (j = 1; j < width - 1; j++)
		{
			if ((gra[i][j] != -1) && (gra[i][j] != -2))//排除已被处理过的点
			{
				/*检测弱边缘点8邻域内是否有强边缘点，若有则标记该点为强边缘点，若无则标记该点为非边缘点*/
				//if ((gra[i - 1][j - 1] == -2) | (gra[i - 1][j] == -2) | (gra[i - 1][j + 1] == -2))
				//{
				//	ptr[i][j] = 255;
				//	gra[i][j] = -2;//强边缘点标记为-2
				//}
				//else if ((gra[i][j - 1] == -2) | (gra[i][j + 1] == -2))
				//{
				//	ptr[i][j] = 255;
				//	gra[i][j] = -2;//强边缘点标记为-2
				//}
				//else if ((gra[i + 1][j - 1] == -2) | (gra[i + 1][j] == -2) | (gra[i + 1][j + 1] == -2))
				//{
				//	ptr[i][j] = 255;
				//	gra[i][j] = -2;//强边缘点标记为-2
				//}
				//else
				//{
				//	gra[i][j] = -1;//非边缘点标记为-1
				//	ptr[i][j] = 0;
				//}

				/*检测弱边缘点4邻域内是否有强边缘点，若有则标记该点为强边缘点，若无则标记该点为非边缘点*/
				if ((gra[i - 1][j] == -2))
				{
					ptr[i][j] = 255;
					gra[i][j] = -2;//强边缘点标记为-2
				}
				else if ((gra[i][j - 1] == -2) | (gra[i][j + 1] == -2))
				{
					ptr[i][j] = 255;
					gra[i][j] = -2;//强边缘点标记为-2
				}
				else if (gra[i + 1][j] == -2)
				{
					ptr[i][j] = 255;
					gra[i][j] = -2;//强边缘点标记为-2
				}
				else
				{
					gra[i][j] = -1;//非边缘点标记为-1
					ptr[i][j] = 0;
				}
			}
		}
	}
	//for (i = 1; i < height - 1; i++)
	//{
	//	for (j = 1; j < width - 1; j++)
	//	{
	//		if (gra[i][j] == -2)//排除已被处理过的点
	//		{
	//			/*检测弱边缘点8邻域内是否有强边缘点，若有则标记该点为强边缘点，若无则标记该点为非边缘点*/
	//			if ((gra[i - 1][j - 1] == -2) | (gra[i - 1][j] == -2) | (gra[i - 1][j + 1] == -2))
	//			{
	//				ptr[i][j] = 255;
	//				gra[i][j] = -2;//强边缘点标记为-2
	//			}
	//			else if ((gra[i][j - 1] == -2) | (gra[i][j + 1] == -2))
	//			{
	//				ptr[i][j] = 255;
	//				gra[i][j] = -2;//强边缘点标记为-2
	//			}
	//			else if ((gra[i + 1][j - 1] == -2) | (gra[i + 1][j] == -2) | (gra[i + 1][j + 1] == -2))
	//			{
	//				ptr[i][j] = 255;
	//				gra[i][j] = -2;//强边缘点标记为-2
	//			}
	//			else
	//			{
	//				gra[i][j] = -1;//非边缘点标记为-1
	//				ptr[i][j] = 0;
	//			}
	//		}
	//	}
	//}
}